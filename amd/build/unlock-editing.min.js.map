{"version":3,"file":"unlock-editing.min.js","sources":["../src/unlock-editing.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Support for unlocking editing of a student or submission.\n *\n * @copyright  2020 Xi'an Jiaotong-Liverpool University\n * @author     Frédéric Massart <fred@branchup.tech>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/str', 'core/notification'], function($, Ajax, Str, Notification) {\n\n    const strings = [\n        {key: 'areyousure', component: 'core'},\n        {key: 'yes', component: 'core'},\n        {key: 'no', component: 'core'},\n        {key: 'confirmunlockeditingsubmission', component: 'mod_peerwork'},\n        {key: 'confirmunlockeditinggrader', component: 'mod_peerwork'},\n    ];\n\n    /**\n     * Init function.\n     *\n     * @param {String} submissionSelector The submission selector.\n     * @param {String} graderSelector The grader selector.\n     */\n    function init(submissionSelector, graderSelector) {\n\n        // Preload strings.\n        const stringsPromise = Str.get_strings(strings).catch(Notification.exception);\n\n        // Find the submission selector.\n        $(submissionSelector).on('click', (e) => {\n            e.preventDefault();\n            const node = $(e.currentTarget);\n            const submissionId = node.data('submissionid');\n\n            stringsPromise.then(([title, yesLabel, noLabel, qSubmission]) => {\n                return Notification.confirm(title, qSubmission, yesLabel, noLabel, () => {\n                    node.hide();\n                    Ajax.call([{ // eslint-disable-line promise/no-nesting\n                        methodname: 'mod_peerwork_unlock_submission',\n                        args: {submissionid: submissionId}\n                    }])[0].then(() => {\n                        node.remove();\n                        return true;\n                    }).catch((e) => {\n                        node.show();\n                        return Notification.exception(e);\n                    });\n                });\n            }).catch(Notification.exception);\n        });\n\n        // Find the grader selectors.\n        $(graderSelector).on('click', (e) => {\n            e.preventDefault();\n            const node = $(e.currentTarget);\n            const peerworkId = node.data('peerworkid');\n            const graderId = node.data('graderid');\n            const graderName = node.data('graderfullname');\n\n            stringsPromise.then(([title, yesLabel, noLabel]) => {\n                return Notification.confirm(\n                    title,\n                    M.util.get_string('confirmunlockeditinggrader', 'mod_peerwork', graderName),\n                    yesLabel,\n                    noLabel,\n                    () => {\n                        const nodes = $(graderSelector).filter(`[data-graderid=${graderId}]`);\n                        nodes.hide();\n                        Ajax.call([{ // eslint-disable-line promise/no-nesting\n                            methodname: 'mod_peerwork_unlock_grader',\n                            args: {peerworkid: peerworkId, graderid: graderId}\n                        }])[0].then(() => {\n                            nodes.remove();\n                            return true;\n                        }).catch((e) => {\n                            nodes.show();\n                            return Notification.exception(e);\n                        });\n                    }\n                );\n            }).catch(Notification.exception);\n        });\n\n    }\n\n    return {\n        init: init\n    };\n\n});\n"],"names":["define","$","Ajax","Str","Notification","strings","key","component","init","submissionSelector","graderSelector","stringsPromise","get_strings","catch","exception","on","e","preventDefault","node","currentTarget","submissionId","data","then","_ref","title","yesLabel","noLabel","qSubmission","confirm","hide","call","methodname","args","submissionid","remove","show","peerworkId","graderId","graderName","_ref2","M","util","get_string","nodes","filter","peerworkid","graderid"],"mappings":";;;;;;;AAuBAA,qCAAO,CAAC,SAAU,YAAa,WAAY,sBAAsB,SAASC,EAAGC,KAAMC,IAAKC,oBAE9EC,QAAU,CACZ,CAACC,IAAK,aAAcC,UAAW,QAC/B,CAACD,IAAK,MAAOC,UAAW,QACxB,CAACD,IAAK,KAAMC,UAAW,QACvB,CAACD,IAAK,iCAAkCC,UAAW,gBACnD,CAACD,IAAK,6BAA8BC,UAAW,uBAuE5C,CACHC,cA/DUC,mBAAoBC,sBAGxBC,eAAiBR,IAAIS,YAAYP,SAASQ,MAAMT,aAAaU,WAGnEb,EAAEQ,oBAAoBM,GAAG,SAAUC,IAC/BA,EAAEC,uBACIC,KAAOjB,EAAEe,EAAEG,eACXC,aAAeF,KAAKG,KAAK,gBAE/BV,eAAeW,MAAKC,WAAEC,MAAOC,SAAUC,QAASC,yBACrCvB,aAAawB,QAAQJ,MAAOG,YAAaF,SAAUC,SAAS,KAC/DR,KAAKW,OACL3B,KAAK4B,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CAACC,aAAcb,iBACrB,GAAGE,MAAK,KACRJ,KAAKgB,UACE,KACRrB,OAAOG,IACNE,KAAKiB,OACE/B,aAAaU,UAAUE,YAGvCH,MAAMT,aAAaU,cAI1Bb,EAAES,gBAAgBK,GAAG,SAAUC,IAC3BA,EAAEC,uBACIC,KAAOjB,EAAEe,EAAEG,eACXiB,WAAalB,KAAKG,KAAK,cACvBgB,SAAWnB,KAAKG,KAAK,YACrBiB,WAAapB,KAAKG,KAAK,kBAE7BV,eAAeW,MAAKiB,YAAEf,MAAOC,SAAUC,sBAC5BtB,aAAawB,QAChBJ,MACAgB,EAAEC,KAAKC,WAAW,6BAA8B,eAAgBJ,YAChEb,SACAC,SACA,WACUiB,MAAQ1C,EAAES,gBAAgBkC,gCAAyBP,eACzDM,MAAMd,OACN3B,KAAK4B,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CAACa,WAAYT,WAAYU,SAAUT,aACzC,GAAGf,MAAK,KACRqB,MAAMT,UACC,KACRrB,OAAOG,IACN2B,MAAMR,OACC/B,aAAaU,UAAUE,YAI3CH,MAAMT,aAAaU"}