{"version":3,"file":"inplace_editable.min.js","sources":["../src/inplace_editable.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AJAX helper for the inline editing a value.\n *\n * This script is automatically included from template core/inplace_editable\n * It registers a click-listener on [data-inplaceeditablelink] link (the \"inplace edit\" icon),\n * then replaces the displayed value with an input field. On \"Enter\" it sends a request\n * to web service core_update_inplace_editable, which invokes the specified callback.\n * Any exception thrown by the web service (or callback) is displayed as an error popup.\n *\n * @module     core/inplace_editable\n * @copyright  2016 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.1\n */\ndefine(['jquery',\n        'core/ajax',\n        'core/templates',\n        'core/notification',\n        'core/str',\n    ],\n    function($, ajax, templates, notification, str) {\n\n        var itemid;\n        var warningshown = false;\n\n        /**\n         * Enables inplace editing.\n         */\n        var handleInplaceEdit = function() {\n            warningshown = true;\n\n            document.querySelectorAll('.inplace-grading.cell').forEach(function(td) {\n                td.removeEventListener('click', beforeDueDate, true);\n                td.removeEventListener('keypress', beforeDueDate, true);\n            });\n\n            document.querySelector(\"[data-itemid='\" + itemid + \"'] [data-inplaceeditablelink]\").click();\n        };\n\n        /**\n         * Prevents inplace editing.\n         */\n        var stopInplaceEdit = function() {\n            return true;\n        };\n\n        /**\n         * Displays the show confirmation to edit grade.\n         *\n         * @param {String} message confirmation message\n         * @param {function} onconfirm function to execute on confirm\n         * @param {function} onreject function to execute on reject\n         */\n        var confirmHandleInplaceEdit = function(message, onconfirm, onreject) {\n            str.get_strings([\n                {key: 'confirmeditgrade', component: 'mod_peerwork'},\n                {key: 'yes', component: 'core'},\n                {key: 'no', component: 'mod_peerwork'}\n            ]).done(function(s) {\n                    notification.confirm(s[0], message, s[1], s[2], onconfirm, onreject);\n                }\n            );\n        };\n\n        /**\n         * The edit link was clicked in the group list.\n         *\n         * @param {Event} e click/keypress event\n         */\n        var beforeDueDate = function(e) {\n            if (e.type === 'keypress' && e.keyCode !== 13) {\n                return;\n            }\n\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            itemid = e.target.closest('.inplaceeditable').dataset.itemid;\n\n            str.get_strings([\n                {key: 'confirmeditgradetxt', component: 'mod_peerwork'}\n            ]).done(function(s) {\n                confirmHandleInplaceEdit(s[0], handleInplaceEdit, stopInplaceEdit);\n\n            });\n        };\n\n        document.querySelectorAll('.inplace-grading.cell').forEach(function(td) {\n            if (!warningshown) {\n                td.addEventListener('click', beforeDueDate, true);\n                td.addEventListener('keypress', beforeDueDate, true);\n            }\n            return false;\n        });\n\n        return {};\n    });\n"],"names":["define","$","ajax","templates","notification","str","itemid","warningshown","handleInplaceEdit","document","querySelectorAll","forEach","td","removeEventListener","beforeDueDate","querySelector","click","stopInplaceEdit","e","type","keyCode","stopImmediatePropagation","preventDefault","target","closest","dataset","get_strings","key","component","done","s","message","onconfirm","onreject","confirm","addEventListener"],"mappings":";;;;;;;;;;;;;;AA6BAA,uCAAO,CAAC,SACA,YACA,iBACA,oBACA,aAEJ,SAASC,EAAGC,KAAMC,UAAWC,aAAcC,SAEnCC,OACAC,cAAe,EAKfC,kBAAoB,WACpBD,cAAe,EAEfE,SAASC,iBAAiB,yBAAyBC,SAAQ,SAASC,IAChEA,GAAGC,oBAAoB,QAASC,eAAe,GAC/CF,GAAGC,oBAAoB,WAAYC,eAAe,MAGtDL,SAASM,cAAc,iBAAmBT,OAAS,iCAAiCU,SAMpFC,gBAAkB,kBACX,GA0BPH,cAAgB,SAASI,GACV,aAAXA,EAAEC,MAAqC,KAAdD,EAAEE,UAI/BF,EAAEG,2BACFH,EAAEI,iBACFhB,OAASY,EAAEK,OAAOC,QAAQ,oBAAoBC,QAAQnB,OAEtDD,IAAIqB,YAAY,CACZ,CAACC,IAAK,sBAAuBC,UAAW,kBACzCC,MAAK,SAASC,GA3BU,IAASC,QAASC,UAAWC,SAApBF,QA4BPD,EAAE,GA5BcE,UA4BVxB,kBA5BqByB,SA4BFhB,gBA3BtDZ,IAAIqB,YAAY,CACZ,CAACC,IAAK,mBAAoBC,UAAW,gBACrC,CAACD,IAAK,MAAOC,UAAW,QACxB,CAACD,IAAK,KAAMC,UAAW,kBACxBC,MAAK,SAASC,GACT1B,aAAa8B,QAAQJ,EAAE,GAAIC,QAASD,EAAE,GAAIA,EAAE,GAAIE,UAAWC,yBA2BvExB,SAASC,iBAAiB,yBAAyBC,SAAQ,SAASC,WAC3DL,eACDK,GAAGuB,iBAAiB,QAASrB,eAAe,GAC5CF,GAAGuB,iBAAiB,WAAYrB,eAAe,KAE5C,KAGJ"}